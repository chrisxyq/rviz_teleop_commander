cmake_minimum_required(VERSION 2.4.6)
include($ENV{ROS_ROOT}/core/rosbuild/rosbuild.cmake)

# Set the build type.  Options are:
#  Coverage       : w/ debug symbols, w/o optimization, w/ code-coverage
#  Debug          : w/ debug symbols, w/o optimization
#  Release        : w/o debug symbols, w/ optimization
#  RelWithDebInfo : w/ debug symbols, w/ optimization
#  MinSizeRel     : w/o debug symbols, w/ optimization, stripped binaries
#set(ROS_BUILD_TYPE RelWithDebInfo)

rosbuild_init()

#set the default path for built executables to the "bin" directory
set(EXECUTABLE_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/bin)
#set the default path for built libraries to the "lib" directory
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)

#uncomment if you have defined messages
rosbuild_genmsg()
#uncomment if you have defined services
rosbuild_gensrv()

#common commands for building c++ executables and libraries
#rosbuild_add_library(${PROJECT_NAME} src/example.cpp)
#target_link_libraries(${PROJECT_NAME} another_library)
#rosbuild_add_boost_directories()
#rosbuild_link_boost(${PROJECT_NAME} thread)
#rosbuild_add_executable(example examples/example.cpp)
#target_link_libraries(example ${PROJECT_NAME})

#pathfinderRcvr
#rosbuild_add_executable(pathfinderRcvr_X64 src/Pathfinder.cpp)
#rosbuild_add_executable(pathfinderRcvr_X64 src/UART.cpp)
#rosbuild_add_executable(pathfinderRcvr_X64 src/Algorithm.cpp)
#PFtoTurtle
#rosbuild_add_executable(PFtoTurtle_X64 src/PFtoTurtle.cpp)
#NMotionCtrl
rosbuild_add_executable(NMotionCtrl_R32 src/UART.cpp)
rosbuild_add_executable(NMotionCtrl_R32 src/UARTDev.cpp)
rosbuild_add_executable(NMotionCtrl_R32 src/UartNMotion.cpp)
rosbuild_add_executable(NMotionCtrl_R32 src/NMotionCtrl.cpp)
rosbuild_add_executable(NMotionCtrl_R32 src/Algorithm.cpp)
#TestNMotion
rosbuild_add_executable(TestNMotion_R32 src/TestNMotion.cpp)
#OFPS1
rosbuild_add_executable(OFPS1_R32 src/UART.cpp)
rosbuild_add_executable(OFPS1_R32 src/UARTDev.cpp)
rosbuild_add_executable(OFPS1_R32 src/UartOFPS1.cpp)
rosbuild_add_executable(OFPS1_R32 src/OFPS1.cpp)
rosbuild_add_executable(OFPS1_R32 src/Algorithm.cpp)
#OdomOFPS1
rosbuild_add_executable(OdomOFPS1_R32 src/OdomOFPS1.cpp)
#PowerSource
rosbuild_add_executable(PS1_R32 src/UART.cpp)
rosbuild_add_executable(PS1_R32 src/UARTDev.cpp)
rosbuild_add_executable(PS1_R32 src/UartPS.cpp)
rosbuild_add_executable(PS1_R32 src/PS1.cpp)
rosbuild_add_executable(PS1_R32 src/Algorithm.cpp)
#TestPS
rosbuild_add_executable(TestPS_R32 src/TestPS.cpp)
#PowerSource
rosbuild_add_executable(PBUTTING1_R32 src/UART.cpp)
rosbuild_add_executable(PBUTTING1_R32 src/UARTDev.cpp)
rosbuild_add_executable(PBUTTING1_R32 src/UartPBUTTING.cpp)
rosbuild_add_executable(PBUTTING1_R32 src/PBUTTING1.cpp)
rosbuild_add_executable(PBUTTING1_R32 src/Algorithm.cpp)
#TestPBUTTING
#rosbuild_add_executable(TestPBUTTING_R32 src/TestPBUTTING.cpp)
