<?xml version="1.0" ?>
<!-- =================================================================================== -->
<!-- |    This document was autogenerated by xacro from schunk_lwa4p.urdf.xacro        | -->
<!-- |    EDITING THIS FILE BY HAND IS NOT RECOMMENDED                                 | -->
<!-- =================================================================================== -->
<!--
<robot xmlns:sensor="http://playerstage.sourceforge.net/gazebo/xmlschema/#sensor"
       xmlns:controller="http://playerstage.sourceforge.net/gazebo/xmlschema/#controller"
       xmlns:interface="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
       xmlns:xacro="http://playerstage.sourceforge.net/gazebo/xmlschema/#interface"
       name="lwa4p" >
       -->
<robot name="lwa4p" xmlns:xacro="http://www.ros.org/wiki/xacro">
  <!-- common stuff -->
  <!-- see https://secure.wikimedia.org/wikipedia/en/wiki/List_of_moment_of_inertia_tensors -->
  <material name="Schunk/LightGrey">
    <color rgba="0.7 0.7 0.7 1.0"/>
  </material>
  <material name="Schunk/DarkGrey">
    <color rgba="0.4 0.4 0.4 1.0"/>
  </material>
  <material name="Schunk/Black">
    <color rgba="0.0 0.0 0.0 1.0"/>
  </material>
  <material name="Schunk/DarkGolden">
    <color rgba="0.4 0.4 0.3 1.0"/>
  </material>
  <material name="Schunk/Blue">
    <color rgba="0.0 0.0 0.8 1.0"/>
  </material>
  <!--include filename="$(find cob_description)/gazebo/gazebo.urdf.xacro" /-->
  <!-- calibration -->
  <!-- arm reference positions -->
  <!-- Size of square 'camera' box -->
  <!-- schunk lwa4p -->
  <gazebo>
    <plugin filename="libgazebo_ros_control.so" name="gazebo_ros_control">
      <robotNamespace>/lwa4p_blue</robotNamespace>
      <robotSimType>gazebo_ros_control/DefaultRobotHWSim</robotSimType>
    </plugin>
  </gazebo>
  <!-- foot for arm -->
  <link name="base_link">
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0.25"/>
      <geometry>
        <cylinder length="0.5" radius="0.1"/>
      </geometry>
      <material name="Schunk/DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0.25"/>
      <geometry>
        <cylinder length="0.5" radius="0.1"/>
      </geometry>
    </collision>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0.25"/>
      <mass value="1000.0"/>
      <inertia ixx="100.0" ixy="0" ixz="0" iyy="100.0" iyz="0" izz="100.0"/>
    </inertial>
  </link>
  <!-- arm -->
  <!-- joint between base_link and lwa4p_extended_connector_link -->
  <joint name="arm_podest_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.5"/>
    <parent link="base_link"/>
    <child link="arm_podest_link"/>
  </joint>

  <link name="arm_podest_link">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <visual>
      <origin rpy="0 3.14159265359 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://schunk/meshes/arm_base_link.stl"/>
      </geometry>
      <material name="Schunk/DarkGrey"/>
    </visual>
    <collision>
      <origin rpy="0 3.14159265359 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://schunk/meshes/arm_base_link.stl"/>
      </geometry>
    </collision>
  </link>

  <joint name="arm_base_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0.10"/>
    <parent link="arm_podest_link"/>
    <child link="arm_base_link"/>
  </joint>

  <link name="arm_base_link">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
  </link>
  <!-- joint between arm_0_link and arm_1_link -->
  <joint name="arm_1_joint" type="revolute">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="arm_base_link"/>
    <child link="arm_1_link"/>
    <axis xyz="0 0 1"/>
    <limit effort="370" lower="-2.947" upper="2.947" velocity="1.26"/>
    <!--safety_controller k_position="20" k_velocity="50" soft_lower_limit="${-6.28 + 0.01}" soft_upper_limit="${6.28 - 0.01}" /-->
  </joint>

  <link name="arm_1_link">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.29364"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://schunk/meshes/arm_1_link.stl"/>
      </geometry>
      <material name="Schunk/Blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://schunk/meshes/arm_1_link.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- joint between arm_1_link and arm_2_link -->
  <joint name="arm_2_joint" type="revolute">
    <origin rpy="1.5708 0 0" xyz="0 0 0"/>
    <parent link="arm_1_link"/>
    <child link="arm_2_link"/>
    <axis xyz="0 0 1"/>
    <limit effort="370" lower="-2.947" upper="2.947" velocity="1.26"/>
    <!--safety_controller k_position="20" k_velocity="50" soft_lower_limit="${-2.09 + 0.01}" soft_upper_limit="${2.09 - 0.01}" /-->
  </joint>

  <link name="arm_2_link">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.68311"/>
      <inertia ixx="0.03" ixy="0" ixz="0" iyy="0.03" iyz="0" izz="0.03"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://schunk/meshes/arm_2_link.stl"/>
      </geometry>
      <material name="Schunk/LightGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://schunk/meshes/arm_2_link.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- joint between arm_2_link and arm_3_link -->
  <joint name="arm_3_joint" type="revolute">
    <origin rpy="0 3.14159 0" xyz="0 0.350 0"/>
    <parent link="arm_2_link"/>
    <child link="arm_3_link"/>
    <axis xyz="0 0 1"/>
    <limit effort="176" lower="-2.694" upper="2.694" velocity="1.26"/>
    <!--safety_controller k_position="20" k_velocity="25" soft_lower_limit="${-6.28 + 0.01}" soft_upper_limit="${6.28 - 0.01}" /-->
  </joint>

  <link name="arm_3_link">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="2.1"/>
      <inertia ixx="0.03" ixy="0" ixz="0" iyy="0.03" iyz="0" izz="0.03"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://schunk/meshes/arm_3_link.stl"/>
        <material name="Schunk/Blue"/>
      </geometry>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://schunk/meshes/arm_3_link.stl"/>
      </geometry>
    </collision>
  </link>
  <!-- joint between arm_3_link and arm_4_link -->
  <joint name="arm_4_joint" type="revolute">
    <origin rpy="-1.5708 3.14159 0" xyz="0 0 0"/>
    <parent link="arm_3_link"/>
    <child link="arm_4_link"/>
    <axis xyz="0 0 1"/>
    <limit effort="176" lower="-2.947" upper="2.947" velocity="1.26"/>
    <!--safety_controller k_position="20" k_velocity="25" soft_lower_limit="${-2.09 + 0.01}" soft_upper_limit="${2.09 - 0.01}" /-->
  </joint>

  <link name="arm_4_link">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="1.68311"/>
      <inertia ixx="0.03" ixy="0" ixz="0" iyy="0.03" iyz="0" izz="0.03"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://schunk/meshes/arm_4_link.stl"/>
      </geometry>
      <material name="Schunk/LightGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://schunk/meshes/arm_4_link.stl"/>
      </geometry>
    </collision>
  </link>

  <!-- joint between arm_4_link and arm_5_link -->
  <joint name="arm_5_joint" type="revolute">
    <origin rpy="1.5708 0 3.14159" xyz="0 0.005263 0.305"/>
    <parent link="arm_4_link"/>
    <child link="arm_5_link"/>
    <axis xyz="0 0 1"/>
    <limit effort="41.6" lower="-2.947" upper="2.947" velocity="1.26"/>
    <!--safety_controller k_position="20" k_velocity="25" soft_lower_limit="${-6.28 + 0.01}" soft_upper_limit="${6.28 - 0.01}" /-->
  </joint>

  <link name="arm_5_link">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.807"/>
      <inertia ixx="0.03" ixy="0" ixz="0" iyy="0.03" iyz="0" izz="0.03"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://schunk/meshes/arm_5_link.stl"/>
      </geometry>
      <material name="Schunk/Blue"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://schunk/meshes/arm_5_link.stl"/>
      </geometry>
    </collision>
  </link>

  <!-- joint between arm_5_link and arm_6_link -->
  <joint name="arm_6_joint" type="revolute">
    <origin rpy="-1.5708 0 0" xyz="0 0 0"/>
    <parent link="arm_5_link"/>
    <child link="arm_6_link"/>
    <axis xyz="0 0 1"/>
    <limit effort="20.1" lower="-2.947" upper="2.947" velocity="1.26"/>
    <!--safety_controller k_position="20" k_velocity="25" soft_lower_limit="${-2.09 + 0.01}" soft_upper_limit="${2.09 - 0.01}" /-->
  </joint>

  <link name="arm_6_link">
    <inertial>
      <mass value="0.01"/>
      <origin xyz="0 0 0"/>
      <inertia ixx="0.001" ixy="0.0" ixz="0.0" iyy="0.001" iyz="0.0" izz="0.001"/>
    </inertial>
    <inertial>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <mass value="0.819"/>
      <inertia ixx="0.01" ixy="0" ixz="0" iyy="0.01" iyz="0" izz="0.01"/>
    </inertial>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://schunk/meshes/arm_6_link.stl"/>
      </geometry>
      <material name="Schunk/LightGrey"/>
    </visual>
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <mesh filename="package://schunk/meshes/arm_6_link.stl"/>
      </geometry>
    </collision>
  </link>

  <!-- joint between arm_6_link and camera -->
  <joint name="camera_joint" type="fixed">
    <axis xyz="0 0 0"/>
    <origin rpy="0 -1.57079632679 3.14159265359" xyz="0 0 0.09"/>
    <parent link="arm_6_link"/>
    <child link="camera_link"/>
  </joint>

  <!-- Camera -->
  <link name="camera_link">
    <!-- <xacro:default_inertial/> -->
    <collision>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.11 0.05"/>
      </geometry>
    </collision>
    <visual>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <geometry>
        <box size="0.01 0.11 0.05"/>
      </geometry>
      <material name="Gazebo/Black"/>
    </visual>
    <inertial>
      <mass value="1e-5"/>
      <origin rpy="0 0 0" xyz="0 0 0"/>
      <inertia ixx="1e-6" ixy="0" ixz="0" iyy="1e-6" iyz="0" izz="1e-6"/>
    </inertial>
  </link>
  <!-- generate an optical frame http://www.ros.org/reps/rep-0103.html#suffix-frames
        so that ros and opencv can operate on the camera frame correctly -->
  <!-- these values have to be these values otherwise the gazebo camera image
          won't be aligned properly with the frame it is supposedly originating from -->
  <joint name="camera_optical_joint" type="fixed">
    <origin rpy="0 0 0" xyz="0 0 0"/>
    <parent link="camera_link"/>
    <child link="camera_link_optical"/>
  </joint>

  <link name="camera_link_optical">
    </link>

  <!-- extensions -->
  <gazebo reference="arm_0_link">
    <gravity>true</gravity>
    <self_collide>false</self_collide>
    <material value="Schunk/LightGrey"/>
  </gazebo>
  <gazebo reference="arm_1_link">
    <gravity>true</gravity>
    <self_collide>false</self_collide>
    <material value="Schunk/Blue"/>
  </gazebo>
  <gazebo reference="arm_2_link">
    <gravity>true</gravity>
    <self_collide>false</self_collide>
    <material value="Schunk/LightGrey"/>
  </gazebo>
  <gazebo reference="arm_3_link">
    <gravity>true</gravity>
    <self_collide>false</self_collide>
    <material value="Schunk/Blue"/>
  </gazebo>
  <gazebo reference="arm_4_link">
    <gravity>true</gravity>
    <self_collide>false</self_collide>
    <material value="Schunk/LightGrey"/>
  </gazebo>
  <gazebo reference="arm_5_link">
    <gravity>true</gravity>
    <self_collide>false</self_collide>
    <material value="Schunk/Blue"/>
  </gazebo>
  <gazebo reference="arm_6_link">
    <gravity>true</gravity>
    <self_collide>false</self_collide>
    <material value="Schunk/LightGrey"/>
  </gazebo>
  <!-- camera_link -->
  <gazebo reference="camera_link">
    <mu1>0.2</mu1>
    <mu2>0.2</mu2>
    <material value="Schunk/Black"/>
  </gazebo>
  <!-- camera -->
  <gazebo reference="camera_link">
    <sensor name="camera1" type="camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.0471975512</horizontal_fov>
        <image>
          <width>800</width>
          <height>800</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.02</near>
          <far>100</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
                That pixel's noise value is added to each of its color
                channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin filename="libgazebo_ros_camera.so" name="camera_controller">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>schunk_lwa4p/camera1</cameraName>
        <imageTopicName>image_raw</imageTopicName>
        <cameraInfoTopicName>camera_info</cameraInfoTopicName>
        <frameName>camera_link_optical</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
  </gazebo>
  
  <transmission name="arm_1_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="arm_1_joint">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="arm_1_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="arm_2_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="arm_2_joint">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="arm_2_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="arm_3_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="arm_3_joint">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="arm_3_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="arm_4_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="arm_4_joint">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="arm_4_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="arm_5_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="arm_5_joint">
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="arm_5_motor">
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
  <transmission name="arm_6_trans">
    <type>transmission_interface/SimpleTransmission</type>
    <joint name="arm_6_joint">
      <!--hardwareInterface>EffortJointInterface</hardwareInterface-->
      <hardwareInterface>PositionJointInterface</hardwareInterface>
      <hardwareInterface>VelocityJointInterface</hardwareInterface>
    </joint>
    <actuator name="arm_6_motor">
      <!--hardwareInterface>EffortActuatorInterface</hardwareInterface-->
      <mechanicalReduction>1</mechanicalReduction>
    </actuator>
  </transmission>
</robot>

